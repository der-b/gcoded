# Config file for gcoded
#
# gcoded to detects devices which accepts gcode and provides an interface to
# them via MQTT.

# Set the hostname oder IP of the MQTT broker, which is used to provide the interface for the
# 3D printer.
mqtt_broker = localhost

# Set the port of the MQTT broker.
mqtt_port = 1883

# Set the username used for authentication while connection to the MQTT broker.
#mqtt_user = testuser

# Set the password used for authentication while connection to the MQTT broker.
#mqtt_password = "testpass"

# Set the prefix used for the MQTT topics which expose the 3D printer interface.
# Default is "gcoded"
#mqtt_prefix = "gcoded"

# Set the maximum connection retries to the MQTT broker before an exception is thrown (exiting program)
# If not set, "gcoded" has no maximum and "gcode" will throw an exception after 5 retries.
#mqtt_connect_retries = 5

# Set the PSK and the identity used for encrypted connections to the MQTT broker.
# The format is as follows:
#   <identity>:<PSK>
# PSK have to be in a hexadecimal format without leading '0x'.
# You can only configure PSK based encryption or certificate based encryption. Both is not possible.
#mqtt_psk = identity:deadbeef

# mqtt_cafile and mqtt_capath define methods of accessing the PEM encoded
# Certificate Authority certificates that will be considered trusted when
# checking incoming broker certificates.
# mqtt_cafile defines the path to a file containing the CA certificates.
# mqtt_capath defines a directory that will be searched for files
# containing the CA certificates. For mqtt_capath to work correctly, the
# certificate files must have ".pem", ".crt", ".cer" or ".crl" as the file ending and you must run
# "openssl rehash <path to capath>" each time you add/remove a certificate.
# You can only configure PSK based encryption or certificate based encryption. Both is not possible.
#mqtt_cafile =
#mqtt_capath =

# Path to the PEM encoded client certificate
#mqtt_certfile =

# Path to the PEM encoded client private key
#mqtt_keyfile =

# Normally the thread which controls the 3d printer is running on a realtime scheduler.
# That means, this thread thread has always the priority over normal thread. This has the
# advantage, that other processes/threads which consume a lot CPU time does never disturb
# the printing process. The disadvantage is, that if bug in the realtime thread (i.e.
# infinity loop) might halt the whole operating system, since no other thread will get
# any computing time. This option allows to disable the usage of the realtime scheduler.
# This is intended to ease the debugging.
#
# Setting it to 'false', disables the usage of the realtime scheduler. Default is 'true'.
#
# Using the realtime scheduler needs superuser rights. If you don't want to start the
# Gcoded daemon with this rights, than you have to disable the realtime scheduler.
#use_realtime_scheduler = true

